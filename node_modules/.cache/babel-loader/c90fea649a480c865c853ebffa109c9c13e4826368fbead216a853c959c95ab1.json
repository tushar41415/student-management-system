{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5700/api/students\"; // Apna backend URL\n\nexport const registerStudent = async studentData => {\n  try {\n    const response = await axios.post(API_URL, studentData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      message: \"Server Error\"\n    };\n  }\n};\nexport const getStudents = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:5700/api/students\");\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      message: \"Server Error\"\n    };\n  }\n};\nexport const searchStudents = async name => {\n  try {\n    const response = await axios.get(`http://localhost:5700/api/students/search/${name}`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      message: \"Server Error\"\n    };\n  }\n};\nexport const getStudentById = async id => {\n  try {\n    const response = await axios.get(`http://localhost:5700/api/students/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : {\n      message: \"Server Error\"\n    };\n  }\n};","map":{"version":3,"names":["axios","API_URL","registerStudent","studentData","response","post","data","error","message","getStudents","get","searchStudents","name","getStudentById","id"],"sources":["/Volumes/Tushar/SMS/student-management/src/api/studentApi.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:5700/api/students\"; // Apna backend URL\n\nexport const registerStudent = async (studentData) => {\n  try {\n    const response = await axios.post(API_URL, studentData);\n    return response.data;\n  } catch (error) {\n    throw error.response ? error.response.data : { message: \"Server Error\" };\n  }\n};\n\nexport const getStudents = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5700/api/students\");\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : { message: \"Server Error\" };\n    }\n  };\n  \n  export const searchStudents = async (name) => {\n    try {\n      const response = await axios.get(`http://localhost:5700/api/students/search/${name}`);\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : { message: \"Server Error\" };\n    }\n  };\n  \n\n  export const getStudentById = async (id) => {\n    try {\n      const response = await axios.get(`http://localhost:5700/api/students/${id}`);\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : { message: \"Server Error\" };\n    }\n  };\n  "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC,CAAC,CAAC;;AAEtD,OAAO,MAAMC,eAAe,GAAG,MAAOC,WAAW,IAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,OAAO,EAAEE,WAAW,CAAC;IACvD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAG;MAAEE,OAAO,EAAE;IAAe,CAAC;EAC1E;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAC,oCAAoC,CAAC;IACtE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAG;MAAEE,OAAO,EAAE;IAAe,CAAC;EAC1E;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAOC,IAAI,IAAK;EAC5C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAC,6CAA6CE,IAAI,EAAE,CAAC;IACrF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAG;MAAEE,OAAO,EAAE;IAAe,CAAC;EAC1E;AACF,CAAC;AAGD,OAAO,MAAMK,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACU,GAAG,CAAC,sCAAsCI,EAAE,EAAE,CAAC;IAC5E,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAG;MAAEE,OAAO,EAAE;IAAe,CAAC;EAC1E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}